@model App.Admin.ViewModels.ImagesModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@section Styles
{
	<style>
        .image-preview-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
            gap: 10px;
            margin-top: 20px;
        }

        .image-preview-item {
            position: relative;
            margin: 5%;
        }

        .preview-image {
            max-width: 100%;
            height: auto;
        }

	</style>
	
}


<div style="margin-left:5%;margin-right:5%">
	<h1>Adding Team Images</h1>

	<h4>Our Team</h4>
	<hr />
	<div class="row">
		<div class="col-md-4">
			<form id="imageForm" asp-action="Create" method="post" enctype="multipart/form-data">
				<div asp-validation-summary="ModelOnly" class="text-danger"></div>
				<input asp-for="Key" type="hidden" value="OurTeam" class="form-control" />
				<div class="form-group">
					<label asp-for="Images" class="control-label"></label>
                    <input asp-for="Images" type="file" class="form-control" multiple accept="image/*" />
					<span asp-validation-for="Images" class="text-danger"></span>
				</div>
				<div class="image-preview-grid" id="imagePreviewGrid"></div>
				<div class="form-group">
					<input type="submit" value="Create" class="btn btn-primary" />
				</div>
			</form>
		</div>
	</div>

	<div>
		<a asp-action="Index">Back to List</a>
	</div>

</div>


@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
	<script>
        document.addEventListener("DOMContentLoaded", function () {
            const imagePreviewGrid = document.getElementById("imagePreviewGrid");
            const fileInput = document.querySelector("input[type='file']");
            const submitButton = document.getElementById("submitButton");

            fileInput.addEventListener("change", function () {
                imagePreviewGrid.innerHTML = ""; // Clear previous previews
                const files = Array.from(fileInput.files);
                files.forEach(file => {
                    const previewItem = document.createElement("div");
                    previewItem.className = "image-preview-item";

                    const image = document.createElement("img");
                    image.src = URL.createObjectURL(file);
                    image.className = "preview-image";
                    previewItem.appendChild(image);                   

                    imagePreviewGrid.appendChild(previewItem);
                });
            });

        });

	</script>
}
